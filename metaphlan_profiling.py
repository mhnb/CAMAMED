#This function executes Metaphlan software on sample data
while 1:
	import os
	os.system('clear')
	print "In this state, using the Metaphlan software, the abundance of all bacteria is extracted at the selected taxonomic level." 
        print 
	print
	print "Enter c1 to execute metaphlan2."
	print "Enter c2 to extract information from metaphlan2 output files."
	print "Enter 0 for back"
	x=raw_input()
	#x=int(c)
	if x=='c1':
		import os
		os.system('clear')
		print "In this state, metaphlan2 software runs on samples"
		print
		print "Metaphlan can produce taxonomic profiling at different levels."
		print "Such as Kingdom, Phylum, Class, Order, Family, Genus, and Species."
		print "For this purpose, enter 'k', 'p', 'c', 'o', 'f', 'g', 's' respectively."
		print "But it is recommended to use family, genus or species level."
		print "Select one of {'k', 'p', 'c', 'o', 'f', 'g', 's'}:"
		c=raw_input()
		while c not in ['k','p','c','o','f','g','s']:
			print "Selected character is not correct, enter one of {'k','p','c','o','f','g','s'}"
			c=raw_input()
		import subprocess
		cmd1 = './metaphlan_samlpe.sh '+c
		#print cmd
		#subprocess.call("./metaphlan_samlpe.sh ",[c])
		subprocess.call(cmd1, shell=True)
		print "Please press the key to continue"
		c=raw_input()
	elif x=='c2':
		import os
		os.system('clear')
		print "In this step, the data of the files generated by metaphlan is read and the required information is extracted."
		sam_na=open("sample_file_names.txt","r")
		import os
		cdp=os.getcwd()
		file_p=cdp+'/all_results/'+'total_metaphlan_results.txt'
		fmp=open(file_p,"w")
		#fmp.write('Total FastQC Results\n')
		#ffq.write('Filename,Total Sequenses,%GC Content,Sequence length\n')
		taxa=[]
		sac=0
		while 1:
			san=sam_na.readline().rstrip()
			#filename, file_extension = os.path.splitext(san)
			if san=="":
				break
			else:
				#print(san)
				sac=sac+1
				file_p=cdp+'/metaphlan_output/metaphlan_'+san
				ftx=open(file_p,"r")
				tx=ftx.readline()
				tx=ftx.readline()
				while tx !="":
					tl=tx[0]
					h1=tx.find('\t')
					tx1=tx[3:h1]
					if tx1 not in taxa: 
						taxa.append(tx1)
					tx=ftx.readline()
				ftx.close()
		sam_na.close()		
		taxa.sort()
		file_p=cdp+'/all_results/'+'metaphlan_taxa.txt'
		fmtx=open(file_p,"w")
		fmtx.write("Bacteria in genus level extracted with Metaphlan\n")
		j=0
		while j<len(taxa):
			fmtx.write(taxa[j])
			fmtx.write('\n')
			j=j+1
		#print(len(taxa))
		fmtx.close()
		###########################
		sam_na=open("sample_file_names.txt","r")
		s=(len(taxa),sac)
		import numpy
		meta_mat=numpy.zeros(s)
		j=-1
		while 1:
			san=sam_na.readline().rstrip()
			#filename, file_extension = os.path.splitext(san)
			if san=="":
				break
			else:
				j=j+1
				file_p=cdp+'/metaphlan_output/metaphlan_'+san
				ftx=open(file_p,"r")
				tx=ftx.readline()
				tx=ftx.readline()
				while tx !="":
					h1=tx.find('\t')
					tx1=tx[3:h1]
					c1=tx[h1+1:len(tx)]
					i=taxa.index(tx1)
					meta_mat[i,j]=c1
					tx=ftx.readline()
				ftx.close()
		sam_na.close()
		if tl=='k':
			tll="Kingdom"
		elif tl=='p':
			tll="Phylum"
		elif tl=='c':
			tll="Class"
		elif tl=='o':
			tll="Order"
		elif tl=='f':
			tll="Family"
		elif tl=='g':
			tll="Genus"
		elif tl=='s':
			tll="Species"

		fmp.write("This file shows the results of Metaphlan on all samples, which are presented in the level of the "+tll+" in taxonomic profiling\n")
		fmp.write("Columns The name of the samples and rows is the name of the bacteria in the taxonomic level\n")
		#fmp.write('\t\t\t')
		sam_na=open("sample_file_names.txt","r")
		fmp.write('                                ')
		while 1:
			san=sam_na.readline().rstrip()
			if san=="":
				break
			else:
				fmp.write('%15s'%san)
				fmp.write('\t')
		fmp.write('\n')
		sam_na.close()
		i=0
		while i<len(taxa):
			fmp.write('%-28s'%taxa[i])
			fmp.write('\t')
			j=0
			while j<sac:
				fmp.write('%15s'%str(meta_mat[i,j]))
				fmp.write('\t')
				j=j+1
			fmp.write('\n')
			i=i+1
		fmp.close()
		print ""
		print ""		
		print "This information was successfully extracted."
		print "The results are visible in the all_results folder in the metaphlan_taxa.txt and total_metaphan_results.txt files."
		print "Please press the key to continue"	
		c=raw_input()
	elif x=='0':
		break
