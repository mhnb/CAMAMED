#This function extract annotated information from KEGG databases
# coding: utf-8
while 1:
	import os
	cdp=os.getcwd()
	os.system('clear')
	print "KEGG annotation" 
        print 
	print
	print "Enter e1 for Preparing the Gene Catalog for extracting annotated information from the KEGG databases."
	print "Enter e2 to extract information from GhostKOALA or KAAS output files."
	print "Enter e3 to extract annotated information that has already been extracted from the KEGG database."
	print "Enter e4 to extract the annotated information from the KEGG database. (**optional**)"
	print "Enter 0 for back."
	x=raw_input()
	#x=int(c)
	if x=='e1':
		import os
		os.system('clear')
		print "In this state, we prepare a gene catalog to extract the annotated information from the KEGG database."
		print
		print "To obtain KOs associated with gene sequences using web services GhostKOALA and KAAS,"
		print "it would be better if the file size of the gene catalog is less than 300 MB."
		print "The gene catalog is stored after the preprocessing and deletion of the duplicate genes (optional)"
		print "named main_gene_catalog.fa in the original folder of the program."
		print "If the gene catalog size is more than 300MB, you can use this option to convert it to smaller files."
		print ""
		print "Do you want to continue [y/n]:"
		s=raw_input()
		if s=='y':
			print ""
			print "For example, if the gene catalog has 300 gene sequences,"
			print "you can convert it to three files with 100 genes by entering the values ​​100  200."
			file_p=cdp+'/files/catalog_length.txt'
			fcl=open(file_p,"r")
			cl=int(fcl.readline().rstrip('\n'))
			fcl.close()
			print ""
			print "The main_gene_catalog.fa gene catalog has "+str(cl)+" genes and you can select the appropriate values ​​to convert them according to the sample."
			print "Enter your sorted values="
			st=raw_input()
			x=[int(s) for s in st.split() if s.isdigit()]
			x=list(set(x))
			x.sort()
			f=0
			i=0
			while i<len(x):
				if x[i]<2 or x[i]>cl-1:
					f=1
				i+=1
			if f==1:
				print "You must enter the values ​​regularly in range 2 and "+str(cl-1)
				print "Please press the key to continue"	
				c=raw_input()
			else:
				file_p=cdp+'/main_gene_catalog.fa'
				fgc=open(file_p,"r")
				z=0
				for i in range(0,len(x)+1):
					if i==0:
						j=1
					else:
						j=x[i-1]+1
					if i<len(x):
						h=x[i]
					else:
						h=cl
					file_p=cdp+'/sub_catalog_files/catalog'+str(i+1)+'.fa'
					fsgc=open(file_p,"w")
					while j<=h:
						if z==0:
							text=fgc.readline().rstrip()
						if text!="" and text[0]=='>':
							z=1
							j+=1
							fsgc.write(text)
							fsgc.write('\n')
							text=fgc.readline().rstrip()
							while text!="" and text[0]!='>':
								fsgc.write(text)
								fsgc.write('\n')
								text=fgc.readline().rstrip()
						
					fsgc.close()
				print "The gene catalog has become "+str(len(x)+1)+" sub-catalogs and is stored in the sub_catalog_files folder."
				print "You can repeat this step if their size is not appropriate."
				print ""
				print "Please press the key to continue"	
				c=raw_input()
				

		
	elif x=='e2':
		import os
		os.system('clear')
		print "In this step, the data of the files generated by GhostKOALA or KAAS server are read and the required information is extracted."
		print "To do this, first, copy the text files into ./kegg_annotation/ and insert the filenames based on the example with space."
		print "Be sure to arrange the file names based on the gene number. Example:file1.txt file2.txt"
		c=raw_input()
		import re
		h1=[m.start() for m in re.finditer(' ', c)]
		#print(h1)
		import numpy
		a=numpy.zeros(len(h1)+2)
		j=0
		while j<len(h1):
			a[j+1]=h1[j]
			j=j+1
		#a[1:len(h1)]=h1;
		a[len(h1)+1]=len(c)
		b=a.astype(int)
		cdp=os.getcwd()
		file_p=cdp+'/kegg_annotation/gene_ko.txt'
		fgeko=open(file_p,"w")
		i=0
		while i<len(a)-1:
			if i==0:
				file_n=c[b[i]:b[i+1]]
			else:
				file_n=c[b[i]+1:b[i+1]]
			cdp=os.getcwd()
			file_p=cdp+'/kegg_annotation/'+file_n
			fkegg=open(file_p,"r")
			kl=fkegg.readline()
			while kl!="":
				h1=kl.find('\t')
				kkk=re.findall('K\d\d\d\d\d', kl)
				kk=[]
				j=0
				while j<len(kkk):
					if kkk[j] not in kk: 
						kk.append(kkk[j])
					j=j+1
				j=0
				while j<len(kk):
					fgeko.write(kl[0:h1]+'\t')
					fgeko.write(kk[j]+'\n')
					j=j+1
				kl=fkegg.readline()
			fkegg.close()
			i=i+1
		fgeko.close()
		############################
		file_p=cdp+'/kegg_annotation/gene_ko.txt'
		fgeko=open(file_p,"r")
		lko=[]
		x=fgeko.readline()
		while x!="":
			kk=re.findall('K\d\d\d\d\d', x)
			if kk not in lko: 
				lko.append(kk)
			x=fgeko.readline()
		fgeko.close()
		lko.sort()
		file_p=cdp+'/kegg_annotation/ko.txt'
		fko=open(file_p,"w")
		j=0
		while j<len(lko):
			str1 = ''.join(str(e) for e in lko[j])
			fko.write(str1+'\n')
			j=j+1
		fko.close()

		print ""
		print ""		
		print "This information was successfully extracted."
		print "The results are visible in the kegg_annotation folder in the gene_ko.txt and ko.txt files"
		print "Please press the key to continue"	
		c=raw_input()
	elif x=='e3':
		execfile("kegg_local_annotation.py")
	elif x=='e4':
		execfile("kegg_annotation.py")
	elif x=='0':
		break
